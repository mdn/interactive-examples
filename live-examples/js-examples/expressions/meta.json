{
    "pages": {
      "expressionsAddition": {
          "exampleCode": "./live-examples/js-examples/expressions/expressions-addition.js",
          "fileName": "expressions-addition.html",
          "title": "JavaScript Demo: Expressions - Addition operator",
          "type": "js"
      },
      "expressionsAssignment": {
            "exampleCode": "./live-examples/js-examples/expressions/expressions-assignment.js",
            "fileName": "expressions-assignment.html",
            "title": "JavaScript Demo: Expressions - Assignment",
            "type": "js"
        },
        "expressionsBitwiseOperators": {
            "exampleCode": "./live-examples/js-examples/expressions/expressions-bitwiseoperators.js",
            "fileName": "expressions-bitwiseoperators.html",
            "title": "JavaScript Demo: Expressions - Bitwise operators",
            "type": "js"
        },
        "expressionsClassExpression": {
            "exampleCode": "./live-examples/js-examples/expressions/expressions-classexpression.js",
            "fileName": "expressions-classexpression.html",
            "title": "JavaScript Demo: Expressions - class expression",
            "type": "js"
        },
        "expressionsCommaOperators": {
            "exampleCode": "./live-examples/js-examples/expressions/expressions-commaoperators.js",
            "fileName": "expressions-commaoperators.html",
            "title": "JavaScript Demo: Expressions - Comma operator",
            "type": "js"
        },
        "expressionsComparisonOperators": {
            "exampleCode": "./live-examples/js-examples/expressions/expressions-comparisonoperators.js",
            "fileName": "expressions-comparisonoperators.html",
            "title": "JavaScript Demo: Expressions - Comparison operators",
            "type": "js"
        },
        "expressionsConditionalOperators": {
            "exampleCode": "./live-examples/js-examples/expressions/expressions-conditionaloperators.js",
            "fileName": "expressions-conditionaloperators.html",
            "title": "JavaScript Demo: Expressions - Conditional operator",
            "type": "js"
        },
        "expressionsDecrement": {
            "exampleCode": "./live-examples/js-examples/expressions/expressions-decrement.js",
            "fileName": "expressions-decrement.html",
            "title": "JavaScript Demo: Expressions - Decrement operator",
            "type": "js"
        },
        "expressionsDeleteOperator": {
            "exampleCode": "./live-examples/js-examples/expressions/expressions-deleteoperator.js",
            "fileName": "expressions-deleteoperator.html",
            "title": "JavaScript Demo: Expressions - delete operator",
            "type": "js"
        },
        "expressionsDestructuringAssignment": {
            "exampleCode": "./live-examples/js-examples/expressions/expressions-destructuringassignment.js",
            "fileName": "expressions-destructuringassignment.html",
            "title": "JavaScript Demo: Expressions - Destructuring assignment",
            "type": "js"
        },
        "expressionsDivision": {
            "exampleCode": "./live-examples/js-examples/expressions/expressions-division.js",
            "fileName": "expressions-division.html",
            "title": "JavaScript Demo: Expressions - Division operator",
            "type": "js"
        },
        "expressionsExponentiation": {
            "exampleCode": "./live-examples/js-examples/expressions/expressions-exponentiation.js",
            "fileName": "expressions-exponentiation.html",
            "title": "JavaScript Demo: Expressions - Exponentiation operator",
            "type": "js"
        },
        "expressionsFunctionAsteriskExpression": {
            "exampleCode": "./live-examples/js-examples/expressions/expressions-functionasteriskexpression.js",
            "fileName": "expressions-functionasteriskexpression.html",
            "title": "JavaScript Demo: Expressions - function* expression",
            "type": "js"
        },
        "expressionsFunctionExpression": {
            "exampleCode": "./live-examples/js-examples/expressions/expressions-functionexpression.js",
            "fileName": "expressions-functionexpression.html",
            "title": "JavaScript Demo: Expressions - function expression",
            "type": "js"
        },
        "expressionsGroupingOperator": {
            "exampleCode": "./live-examples/js-examples/expressions/expressions-groupingoperator.js",
            "fileName": "expressions-groupingoperator.html",
            "title": "JavaScript Demo: Expressions - Grouping operator",
            "type": "js"
        },
        "expressionsInOperator": {
            "exampleCode": "./live-examples/js-examples/expressions/expressions-inoperator.js",
            "fileName": "expressions-inoperator.html",
            "title": "JavaScript Demo: Expressions - in operator",
            "type": "js"
        },
        "expressionsIncrement": {
            "exampleCode": "./live-examples/js-examples/expressions/expressions-increment.js",
            "fileName": "expressions-increment.html",
            "title": "JavaScript Demo: Expressions - Increment operator",
            "type": "js"
        },
        "expressionsInstanceof": {
            "exampleCode": "./live-examples/js-examples/expressions/expressions-instanceof.js",
            "fileName": "expressions-instanceof.html",
            "title": "JavaScript Demo: Expressions - instanceof",
            "type": "js"
        },
        "expressionsLogicalAND": {
            "exampleCode": "./live-examples/js-examples/expressions/expressions-logical-and.js",
            "fileName": "expressions-logical-and.html",
            "title": "JavaScript Demo: Expressions - Logical AND",
            "type": "js"
        },
        "expressionsLogicalOR": {
            "exampleCode": "./live-examples/js-examples/expressions/expressions-logical-or.js",
            "fileName": "expressions-logical-or.html",
            "title": "JavaScript Demo: Expressions - Logical OR",
            "type": "js"
        },
        "expressionsLogicalNOT": {
            "exampleCode": "./live-examples/js-examples/expressions/expressions-logical-not.js",
            "fileName": "expressions-logical-not.html",
            "title": "JavaScript Demo: Expressions - Logical NOT",
            "type": "js"
        },
        "expressionsMultiplication": {
            "exampleCode": "./live-examples/js-examples/expressions/expressions-multiplication.js",
            "fileName": "expressions-multiplication.html",
            "title": "JavaScript Demo: Expressions - Multiplication operator",
            "type": "js"
        },
        "expressionsNewOperator": {
            "exampleCode": "./live-examples/js-examples/expressions/expressions-newoperator.js",
            "fileName": "expressions-newoperator.html",
            "title": "JavaScript Demo: Expressions - new operator",
            "type": "js"
        },
        "expressionsNewTarget": {
            "exampleCode": "./live-examples/js-examples/expressions/expressions-newtarget.js",
            "fileName": "expressions-newtarget.html",
            "title": "JavaScript Demo: Expressions - new.target",
            "type": "js"
        },
        "expressionsNullishCoalescingOperator": {
            "exampleCode": "./live-examples/js-examples/expressions/expressions-nullishcoalescingoperator.js",
            "fileName": "expressions-nullishcoalescingoperator.html",
            "title": "JavaScript Demo: Expressions - Nullish coalescing operator",
            "type": "js"
        },
        "expressionsObjectInitializer": {
            "exampleCode": "./live-examples/js-examples/expressions/expressions-objectinitializer.js",
            "fileName": "expressions-objectinitializer.html",
            "title": "JavaScript Demo: Expressions - Object initializer",
            "type": "js"
        },
        "expressionsOperatorPrecedence": {
            "exampleCode": "./live-examples/js-examples/expressions/expressions-operatorprecedence.js",
            "fileName": "expressions-operatorprecedence.html",
            "title": "JavaScript Demo: Expressions - Operator precedence",
            "type": "js"
        },
        "expressionsOptionalChainingOperator": {
            "exampleCode": "./live-examples/js-examples/expressions/expressions-optionalchainingoperator.js",
            "fileName": "expressions-optionalchainingoperator.html",
            "title": "JavaScript Demo: Expressions - Optional chaining operator",
            "type": "js"
        },
        "expressionsPropertyAccessors": {
            "exampleCode": "./live-examples/js-examples/expressions/expressions-propertyaccessors.js",
            "fileName": "expressions-propertyaccessors.html",
            "title": "JavaScript Demo: Expressions - Property accessors",
            "type": "js"
        },
        "expressionsRemainder": {
            "exampleCode": "./live-examples/js-examples/expressions/expressions-remainder.js",
            "fileName": "expressions-remainder.html",
            "title": "JavaScript Demo: Expressions - Remainder operator",
            "type": "js"
        },
        "expressionsSpreadSyntax": {
            "exampleCode": "./live-examples/js-examples/expressions/expressions-spreadsyntax.js",
            "fileName": "expressions-spreadsyntax.html",
            "title": "JavaScript Demo: Expressions - Spread syntax",
            "type": "js"
        },
        "expressionsSubtraction": {
            "exampleCode": "./live-examples/js-examples/expressions/expressions-subtraction.js",
            "fileName": "expressions-subtraction.html",
            "title": "JavaScript Demo: Expressions - Subtraction operator",
            "type": "js"
        },
        "expressionsThis": {
            "exampleCode": "./live-examples/js-examples/expressions/expressions-this.js",
            "fileName": "expressions-this.html",
            "title": "JavaScript Demo: Expressions - this",
            "type": "js"
        },
        "expressionsTypeof": {
            "exampleCode": "./live-examples/js-examples/expressions/expressions-typeof.js",
            "fileName": "expressions-typeof.html",
            "title": "JavaScript Demo: Expressions - typeof",
            "type": "js"
        },
        "expressionsUnaryNegation": {
            "exampleCode": "./live-examples/js-examples/expressions/expressions-unary-negation.js",
            "fileName": "expressions-unary-negation.html",
            "title": "JavaScript Demo: Expressions - Unary negation operator",
            "type": "js"
        },
        "expressionsUnaryPlus": {
            "exampleCode": "./live-examples/js-examples/expressions/expressions-unary-plus.js",
            "fileName": "expressions-unary-plus.html",
            "title": "JavaScript Demo: Expressions - Unary plus operator",
            "type": "js"
        },
        "expressionsVoidOperator": {
            "exampleCode": "./live-examples/js-examples/expressions/expressions-voidoperator.js",
            "fileName": "expressions-voidoperator.html",
            "title": "JavaScript Demo: Expressions - void operator",
            "type": "js"
        },
        "expressionsYield": {
            "exampleCode": "./live-examples/js-examples/expressions/expressions-yield.js",
            "fileName": "expressions-yield.html",
            "title": "JavaScript Demo: Expressions - yield",
            "type": "js"
        },
        "expressionsYieldAsterisk": {
            "exampleCode": "./live-examples/js-examples/expressions/expressions-yieldasterisk.js",
            "fileName": "expressions-yieldasterisk.html",
            "title": "JavaScript Demo: Expressions - yield*",
            "type": "js"
        }
    }
}
